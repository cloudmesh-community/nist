
openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 05-23-2019
  x-status: TODO
  title: NOW
  description: |-

    GREGOR:

    THIS SI NOT WHAT WE UNDERSTAND AS A NOW AND DOES NOT CORRESPOND TO
    OUR ORIGINAL DEFINITION THAT WE USED TO HAVE

    A Network of Stations (NOW) is a cluster over a selection of
    nodes. The nodes can be selected from a yaml file that contains
    all clusters and nodes. NOW can submit a batch of jobs to the
    selected nodes, and wait for the results and gather the results
    when they are ready. Alternatively the results can be retrieved
    manually at a later time.  The communication between the local
    management machine and the NOW nodes are via SSH and the authentication
    is handled with the SSH configuration file.

  termsOfService: "https://github.com/cloudmesh/cloudmesh-nist/blob/main/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup Service
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/main/LICENSE.txt
ervers:
  - url: /cloudmesh/v3
paths:
  /now:
    get:
      tags:
        - NOW
      summary: Returns a list of NOWs
      description: Returns a list of NOWs
      operationId: cloudmesh.now.get
      responses:
        '200':
          description: profile info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NOW"
    put:
      tags:
        - NOW
      summary: Create a new NOW
      description: Create a new NOW
      operationId: cloudmesh.now.add
      parameters:
        - in: path
          name: now
          description: The new NOW to create
          required: true
          schema:
            $ref: "#/components/schemas/NOW"
      responses:
        201:
          description: Created

  /now/{nowname}:
    get:
      tags:
        - NOW
      summary: Returns a now by its name
      description: Returns a now by its name
      operationId: cloudmesh.now.getByName
      parameters:
        - name: nowname
          in: path
          required: true
          description: name of the now
          type: string
      responses:
        '200':
          description: now info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NOW"
    put:
      tags:
        - NOW
      summary: Uploads a now by name
      description: Uploads a now by name
      operationId: cloudmesh.now.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the now
      responses:
        '200':
          description: now info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NOW"
    delete:
      tags:
        - NOW
      summary: Deletes a now by name
      description: Deletes a now by name
      operationId: cloudmesh.now.put_by_name
      parameters:
        - name: name
          in: path
          required: true
          type: string
          description: The name of the now
      responses:
        '200':
          description: now info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NOW"
  /now/{nowname}/{nodename}:
    get:
      tags:
        - NOW
      summary: Returns the specified node info of the specified now
      description: Returns the specified node info of the specified now
      operationId: cloudmesh.now.getNodeByName
      parameters:
        - name: nowname
          in: path
          required: true
          description: name of the now
          type: string
        - name: nodename
          in: path
          required: true
          description: name of the node
          type: string
      responses:
        '200':
          description: NOW node info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NowNode"

  /now/jobs/{jobname}:
    get:
      tags:
        - NOW
      summary: Returns the specified job info submitted to a now
      description: Returns the specified job info submitted to a now
      operationId: cloudmesh.now.getJobByName
      parameters:
        - name: jobname
          description: name of the job
          in: path
          required: true
          type: string
      responses:
        '200':
          description: job info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NowNode"

components:
  schemas:
    NOW:
      type: object
      properties:
        name:
          description: The name of the now
          type: string
        description:
          type: string
          description: A description of the now
        runtime-config:
          description: The type of input and output of the jobs in the now
          type: array
          items:
            $ref: "#/components/schemas/RuntimeConfig"
        nodes:
          description: List of nodes of the now
          type: array
          items:
            $ref: "#/components/schemas/NowNode"
        timestamp:
          description: timestamps associated with the resource
          $ref: "timestamp.yaml#/components/schemas/Timestamp"

    RuntimeConfig:
      type: object
      properties:
        input:
          type: string
          description: the type of input for the jobs submitted to NOW, possible values are params or params+file
        output:
          type: string
          description: the type of input for the jobs submitted to NOW, possible values are stdout, file or file+stdout

    NowNode:
      type: object
      properties:
        name:
          type: string
          description: name of the node
        label:
          type: string
          description: label of the node
        address:
          type: string
          description: address of the node (IP or URL)
        credentials:
          type: array
          description: credential information for connecting to the node
          items:
            $ref: "#/components/schemas/Credentials"

    Credentials:
      type: object
      properties:
        cred_type:
          type: string
          description: type of the credentials
        username:
          type: string
          description: username for conenction
        publickey:
          type: string
          description: path to the publickey
        sshconfigpath:
          type: string
          description: path to the ssh config which is used for connecting to the node

    Path:
      type: object
      description: path information
      properties:
        folder_path:
          type: string
          description: absolute path to the folder
        file_path:
          type: string
          description: absolute path to the file
        file_name:
          type: string
          description: the name of the script/file

    Job:
      type: object
      properties:
        suffix:
          type: string
          description: suffix of the job in the remote
        nowname:
          type: string
          description: name of the NOW on which job is submitted
        job_runtimeconfig:
          type: array
          description: type of the runtime config used for the job
          items:
            $ref: "#/components/schemas/RuntimeConfig"
        script_path_remote:
          type: array
          description: script path information in remote NOW
          items:
            $ref: "#/components/schemas/Path"
        argfiles_path_remote:
          type: array
          description: argument files path information in remote NOW
          items:
            $ref: "#/components/schemas/Path"
        script_path_local:
          type: array
          description: script path information locally
          items:
            $ref: "#/components/schemas/Path"
        argfiles_path_local:
          type: array
          description: argument files path information locally
          items:
            $ref: "#/components/schemas/Path"
        results_folder:
          type: array
          description: local folder to copy the results
          items:
            $ref: "#/components/schemas/Path"
        node_pids:
          type: array
          description: pid in each node
          items:
            $ref: "#/components/schemas/NodePid"

    NodePid:
      type: object
      properties:
        node:
          type: array
          description: node information
          items:
            $ref: "#/components/schemas/NowNode"
        pid:
          type: string
          description: pid number in remote node
