openapi: "3.0.2"
info:
  version: 3.2.0
  x-date: 17-06-2019
  x-status: defined
  title: Microservice
  description: |-
  
    As part of microservices, a function with parameters that can be
    invoked has been defined.

  termsOfService: "https://github.com/cloudmesh-nist/blob/main/LICENSE.txt"
  contact:
    name: NIST BDRA Interface Subgroup
    url: https://cloudmesh-community.github.io/nist
  license:
    name: Apache 2.0
    url: https://github.com/cloudmesh/cloudmesh-nist/blob/main/LICENSE.txt
servers:
  - url: /cloudmesh/v3
paths:
  /microservice:
    get:
      tags:
        - Microservice
      summary: Returns a list of microservicees
      description: Returns a list of all microservicees
      operationId: cloudmesh.microservice.list
      responses:
        '200':
          description: The list of microserviceses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Microservice'
        '401':
          description: Not authorized
  /microservice/{name}:
    get:
      tags:
        - Microservice
      summary: Returns the named microservice
      description: Returns the named microservice
      operationId: cloudmesh.microservice.find_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the microservice
      responses:
        '200':
          description: Returns the microservice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microservice'
        '401':
          description: Not authorized
        '404':
           description: The named microservice could not be found
    put:
      tags:
        - Microservice
      summary: Set an microservice
      description: Sets the named microservice
      operationId: cloudmesh.microservice.add
      requestBody:
        description: The new microservice to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microservice'
      responses:
        '200':
          description: Microservice updated
        '400':
          description: Error updating microservice
        '401':
          description: Not authorized
    delete:
      tags:
        - Microservice
      summary: Deletes the named microservice
      description: Deletes an microservice by name
      operationId: cloudmesh.microservice.delete_by_name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: The name of the microservice
      responses:
        '200':
          description: Deletion successful
        '400':
          description: Error deleting microservice
        '401':
          description: Not authorized
        '404':
           description: The named microservice could not be found
components:
  schemas:
    Microservice:
      type: object
      description: The microservice
      properties:
        name:
          type: string
          description: Name of the microservice
        endpoint:
          type: string
          description: The end point of the microservice
        function:
          type: string
          description: The function the  microservice represents
        description:
          type string:
          description: The description of the microservice
