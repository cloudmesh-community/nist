---
swagger: "2.0"
info:
  version: 3.1.0
  x-date: 02-11-2019
  x-status: defined
  title: VCluster
  description: |-

    VCluster is a tool to create a cluster over a selection of
    nodes. The nodes can be selected from a yaml file that contains
    all clusters and nodes. VCluster can submit a batch of jobs to the
    selected nodes, and wait for the results and gather the results
    when they are ready. Alternatively the results can be retrieved
    manually at a later time.  The comminucation between the vcluster
    and nodes are via SSH and the authentication is handled with the
    SSH configuration file.
    
  termsOfService: https://github.com/cloudmesh-community/nist/blob/master/LICENSE.txt
  contact:
    name: Cloudmesh REST Service Example
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache
host: localhost:8080
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /cloudmesh/vcluster/vcluster:
    get:
      tags:
        - vcluster
      description: Returns list of vclusters
      operationId: get_vcluster
      produces:
        - application/json
      responses:
        200:
          description: profile info
          schema:
            $ref: '#/definitions/VCluster'
    put:
      tags:
        - vcluster
      description: Create a new vcluster
      operationId: add_vcluster
      parameters:
        - in: body
          name: vcluster
          description: The new vcluster to create
          required: true
          schema:
            $ref: '#/definitions/VCluster'
      responses:
        201:
          description: Created

  /cloudmesh/vcluster/vcluster/{vclustername}:
    get:
      tags:
        - vcluster
      description: Returns a vcluster by its name
      operationId: getVclusterByName
      parameters:
        - name: vclustername
          description: name of the vcluster
          type: string
      produces:
        - application/json
      responses:
        200:
          description: vcluster info
          schema:
            $ref: '#/definitions/VCluster'

  /cloudmesh/vcluster/vcluster/{vclustername}/{nodename}:
    get:
      tags:
        - vcluster
      description: Returns the specified node info of the specified vcluster
      operationId: getVclusterNodeByName
      parameters:
        - name: nodename
          description: name of the node
          type: string
        -
      produces:
        - application/json
      responses:
        200:
          description: vcluster node info
          schema:
            $ref: '#/definitions/Node'

  /cloudmesh/vcluster/vcluster/{jobname}:
    get:
      tags:
        - vcluster
      description: Returns the specified job info submitted to a vcluster
      operationId: getJobByName
      parameters:
        - name: vclustername
          description: name of the vcluster
          in: path
          required: true
          type: string
        - name: nodename
          description: name of the name
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: job info
          schema:
            $ref: '#/definitions/Node'

definitions:
  VCluster:
    type: object
    properties:
      name:
        description: The name of the vcluster
        type: string
      description:
        type: string
        description: A description of the vcluster
      runtime-config:
        type: array
        description: The type of input and output of the jobs in the cluster
        $ref: '#definitions/RuntimeConfig'
      nodes:
        type: array
        description: List of nodes of the vcluster
        items:
          $ref: '#/definitions/Node'
      timestamp:
        description: timestamps associated with the resource
        $ref: 'timestamp.yaml#/definitions/Timestamp'

  RuntimeConfig:
    type: object
    properties:
      input:
        type: string
        description: the type of input for the jobs submitted to vcluster, possible values are params or params+file
      output:
        type: string
        description: the type of input for the jobs submitted to vcluster, possible values are stdout, file or file+stdout

  Node:
    type: object
    properties:
      name:
        type: string
        description: name of the node
      label:
        type: string
        description: label of the node
      address:
        type: string
        description: address of the node (IP or URL)
      credentials:
        type: array
        description: credential information for connecting to the node
        items:
          $ref: '#definitions/Credentials'

  Credentials:
    type: object
    properties:
      cred_type:
        type: string
        description: type of the credentials
      username:
        type: string
        description: username for conenction
      publickey:
        type: string
        description: path to the publickey
      sshconfigpath:
        type: string
        description: path to the ssh config which is used for connecting to the node

  Path:
    type: object
    description: path information
    properties:
      folder_path:
        type: string
        description: absolute path to the folder
      file_path:
        type: string
        description: absolute path to the file
      file_name:
        type: string
        description: the name of the script/file

  Job:
    type: object
    properties:
      suffix:
        type: string
        description: suffix of the job in the remote
      clustername:
        type: string
        description: name of the cluster on which job is submitted
      job_runtimeconfig:
        type: array
        description: type of the runtime config used for the job
        items:
          $ref: '#definitions/RuntimeConfig'
      script_path_remote:
        type: array
        description: script path information in remote vcluster
        items:
          $ref: '#definitions/Path'
      argfiles_path_remote:
        type: array
        description: argument files path information in remote vcluster
        items:
          $ref: '#definitions/Path'
      script_path_local:
        type: array
        description: script path information locally
        items:
          $ref: '#definitions/Path'
      argfiles_path_local:
        type: array
        description: argument files path information locally
        items:
          $ref: '#definitions/Path'
      results_folder:
        type: array
        description: local folder to copy the results
        items:
          $ref: '#definitions/Path'
      node_pids:
        type: array
        description: pid in each node
        items:
          $ref: '#definitions/NodePid'

    NodePid:
      type: object
      properties:
        node:
          type: array
          description: node information
          items:
            $ref: '#definitions/Node'
        pid:
          type: string
          description: pid number in remote node
