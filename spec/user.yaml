---
swagger: "2.0"
info:
  version: 3.1.0
  x-status: defined
  x-date: 01-29-2019
  title: User
  description: |-
  
    Services need to specify which users have access to them. User
    information can be reused in other services. Users are useful to
    create virtual organization the depend on user data.  Users can
    be added, removed and listed. A group in the user can be used
    to augment users to be part of one or more groups.  A number of
    roles can specify a specific role of a user.
    
    Terminology

    * *Group*: A user can be part of a Group
    * *Role*: A user can have a role within that Group


  termsOfService: https://github.com/cloudmesh-community/nist/blob/master/LICENSE.txt
  contact:
    name: Cloudmesh User
    url: https://cloudmesh-community.github.io/nist/spec/
  license:
    name: Apache
host: localhost:8080
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /cloudmesh/user:
    get:
      tags:
        - user
      description: Returns all users
      operationId: get_user
      produces:
        - application/json
      responses:
        200:
          description: user information
          schema:
            $ref: '#/definitions/User'
    put:
      tags:
        - user
      summary: Create a new user
      description: Create a new user
      operationId: add_user
      parameters:
        - in: body
          name: user
          description: The new user to create
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: Created
  /cloudmesh/user/{username}:
    get:
      tags:
        - user
      description: Returns the user of a user while looking it up with the username
      operationId: getUserByUsername
      parameters:
        - name: name
          description: name of the user
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: user information
          schema:
            $ref: '#/definitions/User'
  /cloudmesh/user/{uuid}:
    get:
      tags:
        - user
      description: Returns the user of a user while looking it up with the UUID
      operationId: getUserByUuid
      parameters:
        - name: uuid
          description: uuid of the user entry
          in: path
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: user information
          schema:
            $ref: '#/definitions/User'
definitions:
  User:
    type: object
    properties:
      uuid:
        type: string
        description: A unique id for the user
      username:
        type: string
        description: The unique username associated with the user
      group:
        type: array
        description: A list of groups that are associated to the user
        items:
          type: string
      role:
        type: array
        description: A list of groups that are associated to the user
        items:
          type: string
      resource:
        type: array
        description: A list of resources the user has access to
        items:
          type: string
      description:
        type: string
        description: A description for this user
      firstname:
        type: string
        description: The firstanme of the user
      lastname:
        type: string
        description: The lastname of the user 
      publickey:
        type: string
        description: The lastname of the user
      email:
        type: string
        description: The email of the user
      timestamp:
        description: timestamps associated with the resource
        $ref: 'timestamp.yaml#/definitions/Timestamp'
