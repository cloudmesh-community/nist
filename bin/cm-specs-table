#! /usr/bin/env python
"""Cloudmesh OpenAPI Code Generator.

Usage:
  cm-specs-table SERVICES

  cm-specs-table (-h | --help)
  cm-specs-table --version

Options:
  -h --help        Show this screen.
  --version        Show version.

Arguments:
  SERVICES         A list of services separated by SPACE

"""
from docopt import docopt
import os
import sys
import re
import shutil
from prompter import yesno
import yaml

VERSION="0.1"

DEBUG= False

try:
    columns, lines = os.get_terminal_size()
except:
    rows, columns = map(int, os.popen('stty size', 'r').read().split())


def ERROR(*args, **kwargs):
    print("ERROR", *args, file=sys.stderr, **kwargs)


def analyse():

    if arguments["SERVICES"]:
       services = arguments["SERVICES"]
       #print (services)
       services = services.split(" ")
       print ("| Service | Version | Date | Reference | Section ")
       print ("| --- | --- | --- | ------------- | ------------ | ------------| ")
       for service in services:
           lservice = service.lower()
           data = {
               "title": "",
               "version": "",
               "service": service,
               "date": "",
               "reference": f"[:cloud:]("
                     f"https://github.com/cloudmesh/cloudmesh-nist/blob"
                     f"/main/spec/{lservice}.yaml)",
               "section": f"@sec:spec-{lservice}"
           }
           filename = "../spec/{service}.yaml".format(service=service)
           with open(filename, "r") as f:
                spec = yaml.load(f, Loader=yaml.SafeLoader)["info"]
                for field in ["x-date", "version", "title"]:
                    if field  in spec:
                        data[field] = spec[field]
                        if field == 'x-date':
                            data["date"] = spec[field]

                #data["description"] = data["description"].strip().replace("\n","")
                         
                print ("| {title} | {version} | {date} | {reference} | {section}  | ".format(
                    **data))
       print ()
       print(": Specifications {#tbl:spec-table}")
if __name__ == '__main__':
    arguments = docopt(__doc__, version=VERSION)
    if DEBUG:
        print(arguments)

    analyse()
